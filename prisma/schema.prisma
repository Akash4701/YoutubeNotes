// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id    Int   @id @default(autoincrement())
  name String
  skills String[]
  youtube_url  String? @unique
  avgRating  Float?
  totalLikes  Int? @default(0)
  notes Note[]
  comments Comment[]
  connections Connection[] @relation("ReceiverUser")
  connectedTo Connection[] @relation("ConnectedUser")

}
model Note{
   id    Int   @id @default(autoincrement())
   title String
   youtube_url String
   description String?
   likes Int? @default(0)
   author String?
    pdf_url String
    userId Int
    user  User @relation(fields:[userId],references: [id])
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt  
    comments Comment[]
}
  model Comment{
    id Int @id @default(autoincrement())
    content String
    authorId   Int
    author   User @relation(fields:[authorId],references: [id])
    noteId Int
    note Note @relation (fields:[noteId],references: [id])

  }
   model Connection{
    id Int @id @default(autoincrement())
    userId Int
    receiverUser User @relation("ReceiverUser", fields:[userId], references: [id])
    connectedUserId Int
    connectedUser User @relation("ConnectedUser", fields:[connectedUserId], references: [id])
    createdAt DateTime @default(now())
   }




